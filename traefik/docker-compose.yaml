version: '3'

services:
  reverse-proxy:
    # The official v3 Traefik docker image
    container_name: reverse-proxy
    image: traefik:v3.0
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-service-net"
      - "traefik.http.routers.api.rule=Host(`traefik.nkleinbaer.com`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls.certresolver=dnschallenge"
      - "traefik.http.routers.api.entrypoints=web-secure"
      - "traefik.http.routers.api.middlewares=traefikAuth@file, secHeaders@file"
    env_file: .env
    restart: unless-stopped
    mem_limit: 2G
    cpus: 0.75
    user: "2000:2000"
    depends_on:
      - socket-proxy
    security_opt:
      - no-new-privileges
    networks:
      - traefik-ingress-net
      - docker-proxy-net
      - traefik-service-net
    ports:
      # The HTTP port
      - "80:10080"
      - "443:10443"
    volumes:
      - ./config/:/etc/traefik/:ro
      - /mnt/data/traefik/acme:/etc/acme/

  socket-proxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: socket-proxy
    networks:
      - docker-proxy-net
    environment:
      - ALLOW_START=0 #optional
      - ALLOW_STOP=0 #optional
      - ALLOW_RESTARTS=0 #optional
      - AUTH=0 #optional
      - BUILD=0 #optional
      - COMMIT=0 #optional
      - CONFIGS=0 #optional
      - CONTAINERS=1 #optional
      - DISABLE_IPV6=0 #optional
      - DISTRIBUTION=0 #optional
      - EVENTS=1 #optional
      - EXEC=0 #optional
      - IMAGES=0 #optional
      - INFO=0 #optional
      - NETWORKS=0 #optional
      - NODES=0 #optional
      - PING=1 #optional
      - POST=0 #optional
      - PLUGINS=0 #optional
      - SECRETS=0 #optional
      - SERVICES=0 #optional
      - SESSION=0 #optional
      - SWARM=0 #optional
      - SYSTEM=0 #optional
      - TASKS=0 #optional
      - VERSION=1 #optional
      - VOLUMES=0 #optional
      - BIND_CONFIG=:2375
    volumes:
      - ./docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:ro
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    read_only: true
    mem_limit: 64M
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    tmpfs:
      - /run

networks:
  traefik-ingress-net:
  docker-proxy-net:
    internal: true
  traefik-service-net:
    external: true

